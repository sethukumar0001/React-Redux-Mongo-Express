{"ast":null,"code":"var _jsxFileName = \"/home/sethu/Desktop/lovely/frontend/src/components/displayStore/displayStoreData.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ''\n    };\n  }\n\n  render() {\n    store.subscribe(() => {\n      // When state will be updated(in our case, when items will be fetched), \n      // we will update local component state and force component to rerender \n      // with new data.\n      this.setState({\n        data: store.getState().addData.data.data\n      });\n    });\n    console.log(this.state.data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.data);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  addData: state.data\n});\n\nexport default connect(mapStateToProps)(Display);","map":{"version":3,"sources":["/home/sethu/Desktop/lovely/frontend/src/components/displayStore/displayStoreData.js"],"names":["React","Component","connect","Display","constructor","props","state","data","render","store","subscribe","setState","getState","addData","console","log","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACRC,MAAAA,IAAI,EAAC;AADG,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClB;AACA;AACA;AAEA,WAAKC,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEE,KAAK,CAACG,QAAN,GAAiBC,OAAjB,CAAyBN,IAAzB,CAA8BA;AADxB,OAAd;AAGD,KARH;AASEO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,IAAvB;AAEF,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,KAAL,CAAWC,IAAjB,CADH;AAKH;;AAzB0B;;AA4B/B,MAAMS,eAAe,GAAGV,KAAK,KAAK;AAC9BO,EAAAA,OAAO,EAACP,KAAK,CAACC;AADgB,CAAL,CAA7B;;AAMA,eAAeL,OAAO,CAACc,eAAD,CAAP,CAAyBb,OAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from \"react-redux\";\n\nclass Display extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n             data:''\n        }\n    }\n    \n    render(){\n        store.subscribe(() => {\n            // When state will be updated(in our case, when items will be fetched), \n            // we will update local component state and force component to rerender \n            // with new data.\n      \n            this.setState({\n              data: store.getState().addData.data.data\n            });\n          });\n          console.log(this.state.data)\n\n        return(\n           <div>{this.state.data}</div>\n\n        );\n\n    }\n\n}\nconst mapStateToProps = state => ({\n    addData:state.data\n\n\n});\n\nexport default connect(mapStateToProps)(Display);"]},"metadata":{},"sourceType":"module"}