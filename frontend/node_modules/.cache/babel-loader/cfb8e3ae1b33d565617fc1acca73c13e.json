{"ast":null,"code":"var _jsxFileName = \"/home/sethu/Desktop/lovely/frontend/src/components/displayStore/displayStoreData.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport store from '../../Redux/store/store';\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    store.subscribe(() => {\n      // When state will be updated(in our case, when items will be fetched), \n      // we will update local component state and force component to rerender \n      // with new data.\n      this.setState({\n        data: [store.getState().addData.data.data]\n      });\n    });\n    console.log(this.state.data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"email\")), this.state.data.map((data, i) => {\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, data.email);\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  addData: state.data\n});\n\nexport default connect(mapStateToProps)(Display);","map":{"version":3,"sources":["/home/sethu/Desktop/lovely/frontend/src/components/displayStore/displayStoreData.js"],"names":["React","Component","connect","store","Display","constructor","props","state","data","render","subscribe","setState","getState","addData","console","log","map","i","email","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAA+B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACRC,MAAAA,IAAI,EAAC;AADG,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJN,IAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClB;AACA;AACA;AAEA,WAAKC,QAAL,CAAc;AACZH,QAAAA,IAAI,EAAE,CAACL,KAAK,CAACS,QAAN,GAAiBC,OAAjB,CAAyBL,IAAzB,CAA8BA,IAA/B;AADM,OAAd;AAGD,KARH;AASEM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,IAAvB;AAEF,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAIK,KAAKD,KAAL,CAAWC,IAAX,CAAgBQ,GAAhB,CAAoB,CAACR,IAAD,EAAMS,CAAN,KAAU;AAC3B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKT,IAAI,CAACU,KAAV,CAAP;AACJ,KAFC,CAJL,CADD,CADH;AAcH;;AAlC0B;;AAqC/B,MAAMC,eAAe,GAAGZ,KAAK,KAAK;AAC9BM,EAAAA,OAAO,EAACN,KAAK,CAACC;AADgB,CAAL,CAA7B;;AAMA,eAAeN,OAAO,CAACiB,eAAD,CAAP,CAAyBf,OAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from \"react-redux\";\nimport store from '../../Redux/store/store'\n\nclass Display extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n             data:[]\n        }\n    }\n    \n    render(){\n        store.subscribe(() => {\n            // When state will be updated(in our case, when items will be fetched), \n            // we will update local component state and force component to rerender \n            // with new data.\n      \n            this.setState({\n              data: [store.getState().addData.data.data]\n            });\n          });\n          console.log(this.state.data)\n\n        return(\n           <div>\n            <table>\n                <th>\n                    <td>email</td>\n                </th>\n                {this.state.data.map((data,i)=>{\n                    return <td>{data.email}</td>\n               })}\n            </table>\n           </div>\n\n        );\n\n    }\n\n}\nconst mapStateToProps = state => ({\n    addData:state.data\n\n\n});\n\nexport default connect(mapStateToProps)(Display);"]},"metadata":{},"sourceType":"module"}